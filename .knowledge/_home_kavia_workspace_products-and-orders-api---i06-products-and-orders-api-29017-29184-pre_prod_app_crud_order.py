{"is_source_file": true, "format": "Python", "description": "This file contains CRUD (Create, Read, Update, Delete) operations for Order and OrderItem models in a database using SQLAlchemy. It implements various methods for handling orders and their items, including creating new orders, retrieving orders by ID, status, customer email, handling validations, and managing product inventory.", "external_files": ["app.crud.base", "app.models.order", "app.schemas.order", "app.crud.product", "app.errors"], "external_methods": ["product_crud.get", "product_crud.update_inventory"], "published": ["order", "order_item"], "classes": [{"name": "CRUDOrderItem", "description": "Handles CRUD operations specific to the OrderItem model, including creating order items linked to an order and handling product inventory validation."}, {"name": "CRUDOrder", "description": "Handles CRUD operations specific to the Order model, including creating an order with items, retrieving orders by various criteria, and updating order statuses."}], "methods": [{"name": "OrderItem create_with_order( self, db: AsyncSession, *, obj_in: OrderItemCreate, order_id: int )", "description": "Creates a new order item associated with a given order and performs validation on the product's inventory.", "scope": "CRUDOrderItem", "scopeKind": "class"}, {"name": "Optional[Order] get(self, db: AsyncSession, id: int)", "description": "Retrieves an order by its ID, raising an error if the order is not found.", "scope": "CRUDOrder", "scopeKind": "class"}, {"name": "Optional[Order] get_with_items(self, db: AsyncSession, id: int)", "description": "Retrieves an order by ID, including its associated items.", "scope": "CRUDOrder", "scopeKind": "class"}, {"name": "List[Order] get_by_customer_email( self, db: AsyncSession, *, email: str, skip: int = 0, limit: int = 100 )", "description": "Retrieves a list of orders associated with a specific customer email, implementing pagination.", "scope": "CRUDOrder", "scopeKind": "class"}, {"name": "List[Order] get_by_status( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "description": "Retrieves a list of orders filtered by their status, implementing pagination.", "scope": "CRUDOrder", "scopeKind": "class"}, {"name": "Order create_with_items( self, db: AsyncSession, *, obj_in: OrderCreate )", "description": "Creates a new order along with its items, validating product availability and inventory before committing.", "scope": "CRUDOrder", "scopeKind": "class"}, {"name": "Optional[Order] update_status( self, db: AsyncSession, *, id: int, status: OrderStatus )", "description": "Updates the status of an order and ensures valid status transitions.", "scope": "CRUDOrder", "scopeKind": "class"}, {"name": "Order remove(self, db: AsyncSession, *, id: int)", "description": "Removes an order from the database, ensuring certain restrictions are met regarding its current status.", "scope": "CRUDOrder", "scopeKind": "class"}], "calls": ["super().get", "db.add", "db.commit", "db.refresh", "db.delete", "db.execute", "db.rollback"], "search-terms": ["CRUDOrderItem", "CRUDOrder", "create_with_items", "get_by_customer_email", "update_status"], "state": 2, "file_id": 17, "knowledge_revision": 116, "git_revision": "58a71abd9058eb97c673f735f7eb90d63740cdca", "revision_history": [{"37": ""}, {"83": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"84": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"85": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"86": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"90": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"92": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"93": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"95": "370184de095522425ca19c1e5d95b8bdc488032e"}, {"98": "d6bec950efdce2c5b2d3c8ddab6531b59d63a5c9"}, {"116": "58a71abd9058eb97c673f735f7eb90d63740cdca"}], "ctags": [{"_type": "tag", "name": "CRUDOrder", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^class CRUDOrder(CRUDBase[Order, OrderCreate, OrderUpdate]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "CRUDOrderItem", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^class CRUDOrderItem(CRUDBase[OrderItem, OrderItemCreate, Dict[str, Any]]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_with_items", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def create_with_items($/", "language": "Python", "typeref": "typename:Order", "kind": "member", "signature": "( self, db: AsyncSession, *, obj_in: OrderCreate )", "scope": "CRUDOrder", "scopeKind": "class"}, {"_type": "tag", "name": "create_with_order", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def create_with_order($/", "language": "Python", "typeref": "typename:OrderItem", "kind": "member", "signature": "( self, db: AsyncSession, *, obj_in: OrderItemCreate, order_id: int )", "scope": "CRUDOrderItem", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def get(self, db: AsyncSession, id: int) -> Optional[Order]:$/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "(self, db: AsyncSession, id: int)", "scope": "CRUDOrder", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_customer_email", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def get_by_customer_email($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, email: str, skip: int = 0, limit: int = 100 )", "scope": "CRUDOrder", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_status", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def get_by_status($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "scope": "CRUDOrder", "scopeKind": "class"}, {"_type": "tag", "name": "get_with_items", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def get_with_items(self, db: AsyncSession, id: int) -> Optional[Order]:$/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "(self, db: AsyncSession, id: int)", "scope": "CRUDOrder", "scopeKind": "class"}, {"_type": "tag", "name": "order", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^order = CRUDOrder(Order)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order_item", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^order_item = CRUDOrderItem(OrderItem)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "product_crud", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^from app.crud.product import product as product_crud$/", "language": "Python", "kind": "unknown", "nameref": "unknown:product"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def remove(self, db: AsyncSession, *, id: int) -> Order:$/", "language": "Python", "typeref": "typename:Order", "kind": "member", "signature": "(self, db: AsyncSession, *, id: int)", "scope": "CRUDOrder", "scopeKind": "class"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "pattern": "/^    async def update_status($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, id: int, status: OrderStatus )", "scope": "CRUDOrder", "scopeKind": "class"}], "filename": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/order.py", "hash": "cba2496f05fa2ce70f4345e9f847c9f7", "format-version": 4, "code-base-name": "default", "fields": [{"name": "order = CRUDOrder(Order)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order_item = CRUDOrderItem(OrderItem)", "scope": "", "scopeKind": "", "description": "unavailable"}]}