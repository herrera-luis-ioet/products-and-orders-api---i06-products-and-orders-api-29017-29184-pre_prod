{"is_source_file": true, "format": "Python", "description": "This module defines custom exceptions and handlers for consistent error responses across a FastAPI application.", "external_files": [], "external_methods": [], "published": ["APIError", "NotFoundError", "BadRequestError", "ConflictError", "UnauthorizedError", "ForbiddenError", "setup_exception_handlers"], "classes": [{"name": "APIError", "description": "Base class for all API errors, containing attributes for status code, error detail, code, and headers."}, {"name": "NotFoundError", "description": "Error raised when a requested resource is not found."}, {"name": "BadRequestError", "description": "Error raised when the request is malformed or invalid."}, {"name": "ConflictError", "description": "Error raised when there is a conflict with the current state of a resource."}, {"name": "UnauthorizedError", "description": "Error raised when authentication is required but not provided or invalid."}, {"name": "ForbiddenError", "description": "Error raised when the authenticated user doesn't have permission."}, {"name": "ValidationErrorResponse", "description": "Custom response for validation errors, formatting them consistently."}], "methods": [{"name": "None setup_exception_handlers(app: FastAPI)", "description": "Sets up exception handlers for the FastAPI application to manage various types of errors.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse api_error_handler(request: Request, exc: APIError)", "description": "Handles custom API errors.", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"name": "ValidationErrorResponse validation_error_handler( request: Request, exc: RequestValidationError )", "description": "Handles request validation errors.", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"name": "ValidationErrorResponse pydantic_validation_error_handler( request: Request, exc: ValidationError )", "description": "Handles Pydantic validation errors.", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"name": "JSONResponse integrity_error_handler( request: Request, exc: IntegrityError )", "description": "Handles database integrity errors.", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"name": "JSONResponse sqlalchemy_error_handler( request: Request, exc: SQLAlchemyError )", "description": "Handles SQLAlchemy errors.", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"name": "JSONResponse general_exception_handler( request: Request, exc: Exception )", "description": "Handles all other exceptions not specifically caught.", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"name": "__init__( self, detail: str = \"Bad request\", code: str = \"bad_request\", headers: Optional[Dict[str, str]] = None, )", "scope": "BadRequestError", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__( self, detail: str = \"Not authenticated\", code: str = \"unauthorized\", headers: Optional[Dict[str, str]] = None, )", "scope": "UnauthorizedError", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__( self, detail: str = \"Not authorized to perform this action\", code: str = \"forbidden\", headers: Optional[Dict[str, str]] = None, )", "scope": "ForbiddenError", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__( self, detail: str = \"Resource conflict\", code: str = \"conflict\", headers: Optional[Dict[str, str]] = None, )", "scope": "ConflictError", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__( self, detail: str = \"Resource not found\", code: str = \"not_found\", headers: Optional[Dict[str, str]] = None, )", "scope": "NotFoundError", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__( self, status_code: int, content: Dict[str, Any], headers: Optional[Dict[str, str]] = None, )", "scope": "ValidationErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__( self, status_code: int, detail: str, code: Optional[str] = None, headers: Optional[Dict[str, str]] = None, )", "scope": "APIError", "scopeKind": "class", "description": "unavailable"}], "calls": ["logger.error", "logger.exception"], "search-terms": ["custom exceptions", "exception handlers", "APIError", "FastAPI error handling"], "state": 2, "file_id": 27, "knowledge_revision": 58, "git_revision": "", "ctags": [{"_type": "tag", "name": "APIError", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class APIError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "BadRequestError", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class BadRequestError(APIError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConflictError", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class ConflictError(APIError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ForbiddenError", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class ForbiddenError(APIError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotFoundError", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class NotFoundError(APIError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UnauthorizedError", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class UnauthorizedError(APIError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ValidationErrorResponse", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^class ValidationErrorResponse(JSONResponse):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, detail: str = \"Bad request\", code: str = \"bad_request\", headers: Optional[Dict[str, str]] = None, )", "scope": "BadRequestError", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, detail: str = \"Not authenticated\", code: str = \"unauthorized\", headers: Optional[Dict[str, str]] = None, )", "scope": "UnauthorizedError", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, detail: str = \"Not authorized to perform this action\", code: str = \"forbidden\", headers: Optional[Dict[str, str]] = None, )", "scope": "ForbiddenError", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, detail: str = \"Resource conflict\", code: str = \"conflict\", headers: Optional[Dict[str, str]] = None, )", "scope": "ConflictError", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, detail: str = \"Resource not found\", code: str = \"not_found\", headers: Optional[Dict[str, str]] = None, )", "scope": "NotFoundError", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, status_code: int, content: Dict[str, Any], headers: Optional[Dict[str, str]] = None, )", "scope": "ValidationErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, status_code: int, detail: str, code: Optional[str] = None, headers: Optional[Dict[str, str]] = None, )", "scope": "APIError", "scopeKind": "class"}, {"_type": "tag", "name": "api_error_handler", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    async def api_error_handler(request: Request, exc: APIError) -> JSONResponse:$/", "file": true, "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(request: Request, exc: APIError)", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "general_exception_handler", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    async def general_exception_handler($/", "file": true, "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: Request, exc: Exception )", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "integrity_error_handler", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    async def integrity_error_handler($/", "file": true, "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: Request, exc: IntegrityError )", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^logger = logging.getLogger(__app_name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pydantic_validation_error_handler", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    async def pydantic_validation_error_handler($/", "file": true, "language": "Python", "typeref": "typename:ValidationErrorResponse", "kind": "function", "signature": "( request: Request, exc: ValidationError )", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "setup_exception_handlers", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^def setup_exception_handlers(app: FastAPI) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(app: FastAPI)"}, {"_type": "tag", "name": "sqlalchemy_error_handler", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    async def sqlalchemy_error_handler($/", "file": true, "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: Request, exc: SQLAlchemyError )", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "validation_error_handler", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "pattern": "/^    async def validation_error_handler($/", "file": true, "language": "Python", "typeref": "typename:ValidationErrorResponse", "kind": "function", "signature": "( request: Request, exc: RequestValidationError )", "scope": "setup_exception_handlers", "scopeKind": "function"}], "filename": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/errors.py", "hash": "0ef5bd1baf078b90fabeb25e68b77b03", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger = logging.getLogger(__app_name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"58": ""}]}