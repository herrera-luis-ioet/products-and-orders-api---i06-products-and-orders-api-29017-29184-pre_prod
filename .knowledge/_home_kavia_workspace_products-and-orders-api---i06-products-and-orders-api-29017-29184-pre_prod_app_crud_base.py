{"is_source_file": true, "format": "Python", "description": "This file contains a generic base class for CRUD operations that can be extended for specific SQLAlchemy models. It provides methods to create, read, update, and delete records in a database.", "external_files": ["app.database"], "external_methods": ["fastapi.encoders.jsonable_encoder", "sqlalchemy.select", "sqlalchemy.update", "sqlalchemy.delete", "sqlalchemy.ext.asyncio.AsyncSession.execute", "sqlalchemy.ext.asyncio.AsyncSession.commit", "sqlalchemy.ext.asyncio.AsyncSession.refresh", "sqlalchemy.ext.asyncio.AsyncSession.delete"], "published": ["CRUDBase"], "classes": [{"name": "CRUDBase", "description": "Base class for CRUD operations that defines standard methods for database interaction."}], "methods": [{"name": "Optional[ModelType] get(self, db: AsyncSession, id: Any)", "description": "Retrieve a single record by its ID from the database.", "scope": "CRUDBase", "scopeKind": "class"}, {"name": "List[ModelType] get_multi( self, db: AsyncSession, *, skip: int = 0, limit: int = 100 )", "description": "Retrieve multiple records with pagination support.", "scope": "CRUDBase", "scopeKind": "class"}, {"name": "ModelType create(self, db: AsyncSession, *, obj_in: CreateSchemaType)", "description": "Create a new record using the provided data.", "scope": "CRUDBase", "scopeKind": "class"}, {"name": "ModelType update( self, db: AsyncSession, *, db_obj: ModelType, obj_in: Union[UpdateSchemaType, Dict[str, Any]] )", "description": "Update an existing record with new data.", "scope": "CRUDBase", "scopeKind": "class"}, {"name": "Optional[ModelType] delete(self, db: AsyncSession, *, id: int)", "description": "Delete a record by its ID from the database.", "scope": "CRUDBase", "scopeKind": "class"}, {"name": "__init__(self, model: Type[ModelType])", "scope": "CRUDBase", "scopeKind": "class", "description": "unavailable"}], "calls": ["sqlalchemy.select", "fastapi.encoders.jsonable_encoder", "sqlalchemy.ext.asyncio.AsyncSession.execute", "sqlalchemy.ext.asyncio.AsyncSession.commit", "sqlalchemy.ext.asyncio.AsyncSession.refresh", "sqlalchemy.ext.asyncio.AsyncSession.delete"], "search-terms": ["CRUDBase", "base class for CRUD operations", "SQLAlchemy CRUD functionality"], "state": 2, "file_id": 15, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "CRUDBase", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^class CRUDBase(Generic[ModelType, CreateSchemaType, UpdateSchemaType]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "CreateSchemaType", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^CreateSchemaType = TypeVar(\"CreateSchemaType\", bound=BaseModel)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ModelType", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^ModelType = TypeVar(\"ModelType\", bound=Base)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UpdateSchemaType", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^UpdateSchemaType = TypeVar(\"UpdateSchemaType\", bound=BaseModel)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^    def __init__(self, model: Type[ModelType]):$/", "language": "Python", "kind": "member", "signature": "(self, model: Type[ModelType])", "scope": "CRUDBase", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^    async def create(self, db: AsyncSession, *, obj_in: CreateSchemaType) -> ModelType:$/", "language": "Python", "typeref": "typename:ModelType", "kind": "member", "signature": "(self, db: AsyncSession, *, obj_in: CreateSchemaType)", "scope": "CRUDBase", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^    async def delete(self, db: AsyncSession, *, id: int) -> Optional[ModelType]:$/", "language": "Python", "typeref": "typename:Optional[ModelType]", "kind": "member", "signature": "(self, db: AsyncSession, *, id: int)", "scope": "CRUDBase", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^    async def get(self, db: AsyncSession, id: Any) -> Optional[ModelType]:$/", "language": "Python", "typeref": "typename:Optional[ModelType]", "kind": "member", "signature": "(self, db: AsyncSession, id: Any)", "scope": "CRUDBase", "scopeKind": "class"}, {"_type": "tag", "name": "get_multi", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^    async def get_multi($/", "language": "Python", "typeref": "typename:List[ModelType]", "kind": "member", "signature": "( self, db: AsyncSession, *, skip: int = 0, limit: int = 100 )", "scope": "CRUDBase", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "pattern": "/^    async def update($/", "language": "Python", "typeref": "typename:ModelType", "kind": "member", "signature": "( self, db: AsyncSession, *, db_obj: ModelType, obj_in: Union[UpdateSchemaType, Dict[str, Any]] )", "scope": "CRUDBase", "scopeKind": "class"}], "filename": "/home/kavia/workspace/products-and-orders-api---i06-products-and-orders-api-29017-29184-pre_prod/app/crud/base.py", "hash": "b89aef37f3ca65afaf30dc80a1a106f2", "format-version": 4, "code-base-name": "default", "fields": [{"name": "CreateSchemaType = TypeVar(\"CreateSchemaType\", bound=BaseModel)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ModelType = TypeVar(\"ModelType\", bound=Base)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UpdateSchemaType = TypeVar(\"UpdateSchemaType\", bound=BaseModel)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"33": ""}]}